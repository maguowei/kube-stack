apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-kafka-elasticsearch-config
  labels:
    k8s-app: filebeat-kafka-elasticsearch
data:
  filebeat.yml: |-
    filebeat.inputs:
      - type: kafka
        hosts:
          - xxx.com:9092
        topics: ["example"]
        group_id: "filebeat-kafka-elasticsearch"
    output.elasticsearch:
        hosts: ['http://xxx:9200']
        index: "filebeat-kafka-elasticsearch.event-%{[agent.version]}-%{+yyyy.MM.dd}"
    setup.ilm.enabled: false
    setup.template.name: "filebeat-kafka-elasticsearch.event"
    setup.template.pattern: "filebeat-kafka-elasticsearch.event-*"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat-kafka-elasticsearch
  labels:
    k8s-app: filebeat-kafka-elasticsearch
spec:
  selector:
    matchLabels:
      k8s-app: filebeat-kafka-elasticsearch
  template:
    metadata:
      labels:
        k8s-app: filebeat-kafka-elasticsearch
    spec:
      containers:
      - name: filebeat-kafka-elasticsearch
        image: elastic/filebeat:8.1.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        resources:
          limits:
            memory: 2000Mi
          requests:
            cpu: 10000m
            memory: 1000Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
      volumes:
      - name: config
        configMap:
          name: filebeat-kafka-elasticsearch-config
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          path: /var/k8s/volumes/event/filebeat-kafka-elasticsearch
